substitutions:
  esphome_name: node02

esphome:
  name: ${esphome_name}
  platform: ESP8266
  board: d1_mini

wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password
      hidden: true
  fast_connect: true
  reboot_timeout: 3min
  ap:
    ssid: "${esphome_name} Fallback Hotspot"
    password: !secret wifi_ap_password

output:
  - platform: gpio
    id: output_gpio_d7
    pin: D2

light:
  - platform: binary
    id: red_light
    internal: true
    output: output_gpio_d7

sensor:
  - platform: pulse_meter
    name: "${esphome_name} Power Meter"
    pin: D1
    unit_of_measurement: "W"
    accuracy_decimals: 3
    internal_filter: 100ms
    timeout: 2min
    on_value:
      then:
        - if:
            condition:
              lambda: 'return id(led_enabled).state;'
            then:
              - light.turn_on:
                  id: red_light
                  flash_length: 100ms
    filters:
      - multiply: 60
    total:
      name: "${esphome_name} Total Energy"
      unit_of_measurement: "kWh"
      state_class: total_increasing
      device_class: energy
      accuracy_decimals: 3
      filters:
        - multiply: 0.001

switch:
  - platform: template
    name: "${esphome_name} LED enabled"
    id: led_enabled
    optimistic: true

button:
  - platform: restart
    name: "${esphome_name} Restart"

time:
  - platform: homeassistant

captive_portal:

logger:

api:
  encryption:
    key: !secret encryption_key

ota:
  password: !secret ota_password
