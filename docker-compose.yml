version: '3.7'

services:
  adguardhome:
    image: adguard/adguardhome
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.3
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "784:784"
      - "853:853"
    volumes:
      - "./adguardhome/work:/opt/adguardhome/work"
      - "./adguardhome/conf:/opt/adguardhome/conf"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"

  nginx:
    depends_on:
      - adguardhome
      - homeassistant
      - grafana
      - portainer
      - esphome
      - vscode
      - fluidd
    image: nginx
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.4
    ports:
      - "80:80"
      - "443:443"
      - "21443:21443"
    extra_hosts:
      - "homeassistant:10.0.0.1"
      - "esphome:10.0.0.1"
    volumes:
      - "./nginx/etc-nginx-templates:/etc/nginx/templates"
      - "./nginx/etc-nginx-cf-certs:/etc/nginx/cf-certs"
      - "./nginx/etc-nginx-le-certs:/etc/nginx/le-certs"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    env_file: ./nginx/docker/secrets.env
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
    dns: 10.0.0.3
    labels:
      - sh.acme.target

  homeassistant:
    depends_on:
      - mariadb
      - mosquitto
    image: homeassistant/home-assistant
    restart: unless-stopped
    healthcheck:
      test: >-
        curl -f http://localhost:8123 || exit 1
    network_mode: host
    volumes:
      - "./homeassistant/config:/config"
      - "/mnt/media/TV\ Shows:/media/tv:ro"
      - "/mnt/media/Movies:/media/movies:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    environment:
      - PYTHONWARNINGS=ignore:Unverified HTTPS request
    dns: 10.0.0.3

  mosquitto:
    depends_on:
      - adguardhome
    image: eclipse-mosquitto
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.6
    ports:
      - "1883:1883"
      - "1884:1884"
      - "9001:9001"
    volumes:
      - "./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf"
      - "./mosquitto/data:/mosquitto/data"
      - "./mosquitto/config/password_file:/mosquitto/config/password_file"
    dns: 10.0.0.3

  zigbee2mqtt:
    depends_on:
      - mosquitto
    image: koenkk/zigbee2mqtt
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.7
    volumes:
      - "./zigbee2mqtt/data:/app/data"
      # - "./zigbee2mqtt/zigbee-herdsman-converters:/app/node_modules/zigbee-herdsman-converters"
      # - "./zigbee2mqtt/homeassistant-extension/homeassistant.js:/app/lib/extension/homeassistant.js"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    # environment:
    #   - DEBUG=zigbee-herdsman*
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"
    dns: 10.0.0.3

  telegraf:
    depends_on:
      - adguardhome
    image: telegraf
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.8
    volumes:
      - "./telegraf/config/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
      - "/:/hostfs:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    env_file: ./telegraf/docker/secrets.env
    environment:
      - HOST_MOUNT_PREFIX=/hostfs
      - HOST_ETC=/hostfs/etc
      - HOST_PROC=/hostfs/proc
      - HOST_SYS=/hostfs/sys
      - HOST_VAR=/hostfs/var
      - HOST_RUN=/hostfs/run
    dns: 10.0.0.3

  mariadb:
    depends_on:
      - adguardhome
    image: mariadb
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.9
    volumes:
      - "./mariadb/config:/etc/mysql/conf.d"
      - "./mariadb/data:/var/lib/mysql"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    env_file: ./mariadb/docker/secrets.env
    dns: 10.0.0.3

  grafana:
    depends_on:
      - adguardhome
    image: grafana/grafana
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.10
    volumes:
      - "./grafana/data:/var/lib/grafana"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    dns: 10.0.0.3

  portainer:
    depends_on:
      - adguardhome
    image: portainer/portainer-ce
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.11
    volumes:
      - "./portainer/data:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    dns: 10.0.0.3

  esphome:
    depends_on:
      - adguardhome
    image: esphome/esphome-aarch64
    restart: unless-stopped
    network_mode: host
    volumes:
      - "./esphome/config:/config"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    dns: 10.0.0.3

  acme.sh:
    depends_on:
      - adguardhome
    image: neilpang/acme.sh
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.13
    volumes:
      - "./acme.sh/data:/acme.sh"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    env_file: ./acme.sh/docker/secrets.env
    environment:
      - DEPLOY_DOCKER_CONTAINER_LABEL=sh.acme.target
      - DEPLOY_DOCKER_CONTAINER_KEY_FILE=/etc/nginx/le-certs/key.pem
      - DEPLOY_DOCKER_CONTAINER_CERT_FILE="/etc/nginx/le-certs/cert.pem"
      - DEPLOY_DOCKER_CONTAINER_CA_FILE="/etc/nginx/le-certs/ca.pem"
      - DEPLOY_DOCKER_CONTAINER_FULLCHAIN_FILE="/etc/nginx/le-certs/full.pem"
      - DEPLOY_DOCKER_CONTAINER_RELOAD_CMD="service nginx force-reload"
    command: >-
      daemon
    dns: 10.0.0.3

  vscode:
    depends_on:
      - adguardhome
    image: codercom/code-server
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.14
    volumes:
      - "./vscode/data:/home/coder/.local/share/code-server"
      - "./:/home/coder/project"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    env_file: ./vscode/docker/secrets.env
    command: >-
      --auth none --disable-telemetry project
    dns: 10.0.0.3

  fluidd:
    depends_on:
      - adguardhome
    image: cadriel/fluidd
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.16
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    dns: 10.0.0.3

  wireguard:
    image: linuxserver/wireguard
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.15
    volumes:
      - "./wireguard/config:/config"
      - "/lib/modules:/lib/modules:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    environment:
      - PUID=1000
      - PGID=1000
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1

  transmission:
    depends_on:
      - wireguard
    image: linuxserver/transmission
    restart: unless-stopped
    network_mode: service:wireguard
    volumes:
      - "./transmission/config:/config"
      - "../downloads:/downloads"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    environment:
      - PUID=1000
      - PGID=1000

  jackett:
    depends_on:
      - wireguard
    image: linuxserver/jackett
    restart: unless-stopped
    network_mode: service:wireguard
    volumes:
      - "./jackett/config:/config"
      - "../downloads:/downloads"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    environment:
      - PUID=1000
      - PGID=1000
      - AUTO_UPDATE=true

  sonarr:
    depends_on:
      - wireguard
    image: linuxserver/sonarr
    restart: unless-stopped
    network_mode: service:wireguard
    volumes:
      - "./sonarr/config:/config"
      - "../downloads:/downloads"
      - "/mnt/media/TV\ Shows:/tv"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    environment:
      - PUID=1000
      - PGID=1000

  radarr:
    depends_on:
      - wireguard
    image: linuxserver/radarr
    restart: unless-stopped
    network_mode: service:wireguard
    volumes:
      - "./radarr/config:/config"
      - "../downloads:/downloads"
      - "/mnt/media/Movies:/movies"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    environment:
      - PUID=1000
      - PGID=1000

networks:
  backbone:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: backbone
    ipam:
      config:
        - subnet: 10.0.0.0/27
